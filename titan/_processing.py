import os as _os

def print_commandline_cpc(name, outformat):
    """ print output in command line """
    print ("------------------------------------------------------------------ ")
    print (" ")
    print ("          UNIFORM EXTERNAL ELECTRIC FIELD GENERATION")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" THE UNIFORM EEF IS GENERATED IN %.10s FORMAT. " %(outformat))
    print (" ")
    print (" ")
    if outformat == "CHARMM":
        print ("------------------------------------------------------------------ ")
        print ("                            IMPORTANT NOTE")
        print ("------------------------------------------------------------------ ")
        print (" ")
        print (" DO NOT FORGET TO ADD THE TOPOLOGY AND PARAMETER OF CHARGES TO YOUR TOPOLOGICAL AND PARAMETER FILES !!!!")
        print (" ")
        print (" ")
        print ("SEE ./CHARMM_FORMAT_CPC/%.10s.info FOR THE TOPOLOGY AND PARAMETER OF CHARGES. " %(name))
        print (" ")
        print ("------------------------------------------------------------------ ")
        print ("                        END OF IMPORTANT NOTE")
        print ("------------------------------------------------------------------ ")
        print (" ")
        print (" ")
        print (" THE PDB FILE CONTAINING THE TWO PARALLEL CIRCULAR PLATES IS ./CHARMM_FORMAT_CPC/%.10s.pdb" %(name))
    elif outformat == "AMBER":
        print ("------------------------------------------------------------------ ")
        print ("                           IMPORTANT NOTE")
        print ("------------------------------------------------------------------ ")
        print (" ")
        print (" DO NOT FORGET TO ADD THE TOPOLOGY AND PARAMETER OF CHARGES DURING THE SETUP OF SYSTEM !!!!")
        print (" ")
        print (" ")
        print (" SEE \"./AMBER_FORMAT_CPC/%.10s.lib\" AND \"./AMBER_FORMAT_CPC/%.10s.frcmod\"" %(name, name))
        print (" FOR THE TOPOLOGY AND PARAMETER OF CHARGES. ")
        print (" ")
        print (" ")
        print ("------------------------------------------------------------------ ")
        print ("                       END OF IMPORTANT NOTE")
        print ("------------------------------------------------------------------ ")
        print (" ")
        print (" ")
        print (" USE THE COMMAND : ")
        print (" " )
        print ("       cd ./AMBER_FORMAT_CPC")
        print ("       tleap -s -f leap.in")
        print (" ")
        print (" TO GENERATE THE PDB FILE \"%.10s_amber.pdb\" IN AMBER FORMAT." %(name))
    elif outformat == "GAUSSIAN":
        print (" ")
        print (" THE TXT FILE CONTAINING THE TWO PARALLEL CIRCULAR PLATES IS ./GAUSSIAN_FORMAT_CPC/%.10s.txt" %(name))
    else:
        print ("FATAL ERROR. WRONG INPUT FOR \"OUTFORMAT\". ")
        print (" THE %.10s FORMAT FOR UNIFORM EEF GENERATION IS UNDER DEVELOPMENT"%(outformat))
        print ("PLEASE SET \"OUTFORMAT\" TO \"CHARMM\" , \"AMBER\" OR \"GAUSSIAN\"")
        _os.exit()
    print (" ")
    print (" ")
    print (" THE ELECTRIC FIELD HAS SUCCESSFULLY BEEN GENERATED.")
    print (" ")

def print_commandline_sl(name,chirality):
    """ print output in command line """
    print ("------------------------------------------------------------------ ")
    print (" ")
    print ("           EXTERNAL SPIRAL LINE CHARGES GENERATION")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" THE %.20sED HELIX IN THE SHAPE OF A SPIRAL LINE IS GENERATED." %(chirality))
    print (" ")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print ("                            IMPORTANT NOTE")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" PLEASE USE \"CHARGE\" KEYWORD FOR THE GAUSSIAN CALCULATION. ")
    print (" ")
    print (" ")
    print (" SEE ./GAUSS_FORMAT_SL/%.10s.info FOR THE DETAILS OF THE SETUP. " %(name))
    print (" ")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print ("                        END OF IMPORTANT NOTE")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" ")
    print (" THE EXTERNAL CHARGES IN THE SPIRAL LINE SHAPE IS GENERATED IN ./GAUSS_FORMAT_SL/%.10s.txt" %(name))
    print (" YOU CAN SEE THE PDB FILE FOR THE SHAPE OF CHARGES. (./GAUSS_FORMAT_SL/%.10s.pdb)" %(name))
    print (" ")
    print (" ")
    print (" ")
    print (" THE ELECTRIC FIELD HAS SUCCESSFULLY BEEN GENERATED.")
    print (" ")

def write_command_line_quant_txt(name):
    """ print output in command line """
    print ("------------------------------------------------------------------ ")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" THE CHARGE DISTRIBUTION FROM %s.txt HAS SUCCESSFULLY BEEN QUANTIFIED." % (name))
    print (" ")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print ("------------------------------------------------------------------ ")

def write_command_line_quant_pdb(name):
    """ print output in command line """
    print ("------------------------------------------------------------------ ")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" THE CHARGE DISTRIBUTION FROM %s.pdb HAS SUCCESSFULLY BEEN QUANTIFIED." % (name))
    print (" ")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print ("------------------------------------------------------------------ ")

def write_command_line_quant_log(name):
    """ print output in command line """
    print ("------------------------------------------------------------------ ")
    print ("------------------------------------------------------------------ ")
    print (" ")
    print (" ")
    print (" THE CHARGE DISTRIBUTION FROM %s.log HAS SUCCESSFULLY BEEN QUANTIFIED." % (name))
    print (" ")
    print (" ")
    print ("------------------------------------------------------------------ ")
    print ("------------------------------------------------------------------ ")
